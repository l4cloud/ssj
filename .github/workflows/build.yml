name: Build and Release Python App

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  VERSION_MAJOR: ${{ vars.VERSION_MAJOR }}
  VERSION_MINOR: ${{ vars.VERSION_MINOR }}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --onefile --runtime-tmpdir . main.py  

      - name: Archive the executable
        run: |
          mkdir -p dist-artifact
          cp dist/main dist-artifact/ssj  

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: dist-artifact/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Fetch tags
        run: git fetch --tags

      - name: Determine next patch version
        id: version
        run: |
          prefix="v${VERSION_MAJOR}.${VERSION_MINOR}."
          latest_tag=$(git tag --list "${prefix}*" | sort -V | tail -n1)

          if [[ "$latest_tag" =~ ${prefix}([0-9]+)$ ]]; then
            patch="${BASH_REMATCH[1]}"
            next_patch=$((patch + 1))
          else
            next_patch=0
          fi

          version="v${VERSION_MAJOR}.${VERSION_MINOR}.${next_patch}"
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: dist-artifact/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          files: dist-artifact/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
